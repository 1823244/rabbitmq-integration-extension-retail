


Функция СоздатьУзелIdentification(СсылкаНаОбъект) Экспорт
	
	Если Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
		Возврат СоздатьУзелIdentification_Перечисления(СсылкаНаОбъект);
		
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
		Возврат СоздатьУзелIdentification_Справочника(СсылкаНаОбъект);
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
		Возврат СоздатьУзелIdentification_Документа(СсылкаНаОбъект);

	КонецЕсли;
		
	Возврат Неопределено;
	
КонецФункции


Функция СоздатьУзелIdentification_Перечисления(СсылкаНаОбъект) Экспорт
	
	ОтветСтруктура = Новый Структура;
	ОтветСтруктура.Вставить("type", СсылкаНаОбъект.Метаданные().ПолноеИмя());
	ОтветСтруктура.Вставить("Значение", НайтиЗначениеПеречисленияПоПредставлению(СсылкаНаОбъект));
	ОтветСтруктура.Вставить("Представление", Строка(СсылкаНаОбъект));
	
	Возврат ОтветСтруктура;
	
КонецФункции                                         

Функция СоздатьУзелIdentification_Справочника(СсылкаНаОбъект) Экспорт
	
	ОтветСтруктура = Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат ОтветСтруктура;
	КонецЕсли;
	
	ОтветСтруктура.Вставить("type", СсылкаНаОбъект.Метаданные().ПолноеИмя());
	ОтветСтруктура.Вставить("Ref", Строка(СсылкаНаОбъект.УникальныйИдентификатор()));
	
	Попытка
		ОтветСтруктура.Вставить("isFolder", СсылкаНаОбъект.ЭтоГруппа());
	Исключение
	    ОтветСтруктура.Вставить("isFolder", false);
	КонецПопытки;
	
	Попытка
		ОтветСтруктура.Вставить("Code", СсылкаНаОбъект.Код);
	Исключение
	    ОтветСтруктура.Вставить("Code", "");
	КонецПопытки;
	
	Попытка		
		parent = СоздатьУзелIdentification_Справочника(СсылкаНаОбъект.Родитель);
		ОтветСтруктура.Вставить("Parent", parent);
	Исключение
	    
	КонецПопытки;

	
	Возврат ОтветСтруктура;
	
КонецФункции

Функция СоздатьУзелIdentification_Документа(СсылкаНаОбъект) Экспорт
	
	ОтветСтруктура = Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат ОтветСтруктура;
	КонецЕсли;
	
	ОтветСтруктура.Вставить("type", СсылкаНаОбъект.Метаданные().ПолноеИмя());
	ОтветСтруктура.Вставить("Ref", Строка(СсылкаНаОбъект.УникальныйИдентификатор()));
	
	ОтветСтруктура.Вставить("Number", СсылкаНаОбъект.Номер);
	ОтветСтруктура.Вставить("Date", XMLСтрока(СсылкаНаОбъект.Дата));
	
	Возврат ОтветСтруктура;
	
КонецФункции



Функция СоздатьУзелDefinition(СсылкаНаОбъект) Экспорт
	
	Если Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
		Возврат СоздатьУзелDefinition_Перечисления(СсылкаНаОбъект);
		
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
		Возврат СоздатьУзелDefinition_Справочника(СсылкаНаОбъект);
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
		Возврат СоздатьУзелDefinition_Документа(СсылкаНаОбъект);

	КонецЕсли;
		
	Возврат Неопределено;
	
КонецФункции


Функция СоздатьУзелDefinition_Перечисления(СсылкаНаОбъект) Экспорт
	
	ОтветСтруктура = Новый Структура;
	
	Возврат ОтветСтруктура;
	
КонецФункции                                         

Функция СоздатьУзелDefinition_Справочника(СсылкаНаОбъект) Экспорт
	
	ОтветСтруктура = Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат ОтветСтруктура;
	КонецЕсли;
	
	ОтветСтруктура.Вставить("DeletionMark", СсылкаНаОбъект.ПометкаУдаления);
	
	Попытка
		ОтветСтруктура.Вставить("Code", СсылкаНаОбъект.Код);
	Исключение
	    ОтветСтруктура.Вставить("Code", "");
	КонецПопытки;
	Попытка
		ОтветСтруктура.Вставить("Description", СсылкаНаОбъект.Наименование);
	Исключение
	    ОтветСтруктура.Вставить("Description", "");
	КонецПопытки;
	
	Возврат ОтветСтруктура;
	
КонецФункции


Функция СоздатьУзелDefinition_Документа(СсылкаНаОбъект) Экспорт
	
	ОтветСтруктура = Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат ОтветСтруктура;
	КонецЕсли;
	
	ОтветСтруктура.Вставить("DeletionMark", СсылкаНаОбъект.ПометкаУдаления);
	
	ОтветСтруктура.Вставить("isPosted", СсылкаНаОбъект.Проведен);
	
	
	Возврат ОтветСтруктура;
	
КонецФункции



#Область Служебные

// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция НайтиЗначениеПеречисленияПоПредставлению(ЗначениеПеречисления)
	
	МД = ЗначениеПеречисления.Метаданные().ЗначенияПеречисления;
	Для каждого Значение Из МД Цикл
		Если Значение.Синоним = Строка(ЗначениеПеречисления) Тогда
			Возврат Значение.Имя;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область Архив


//// Описание_метода
////
//// Параметры:
////	Параметр1 	- Тип1 - 
////
//// Возвращаемое значение:
////	Тип: Тип_значения
////
//Функция СоздатьУзел(СсылкаНаОбъект) Экспорт
//	
//	Если Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
//		Возврат СоздатьУзелПеречисления(СсылкаНаОбъект);
//	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаНаОбъект)) Тогда
//		Возврат СоздатьУзелСправочника(СсылкаНаОбъект);
//	КонецЕсли;
//		
//	Возврат Неопределено;
//	
//КонецФункции

//Функция СоздатьУзелПеречисления(СсылкаНаОбъект) Экспорт
//	
//	ОтветСтруктура = Новый Структура;
//	ОтветСтруктура.Вставить("type", СсылкаНаОбъект.Метаданные().ПолноеИмя());
//	ОтветСтруктура.Вставить("Значение", Строка(СсылкаНаОбъект));
//	
//	Возврат ОтветСтруктура;
//	
//КонецФункции                                         

//Функция СоздатьУзелСправочника(СсылкаНаОбъект) Экспорт
//	
//	ОтветСтруктура = Новый Структура;
//	ОтветСтруктура.Вставить("type", СсылкаНаОбъект.Метаданные().ПолноеИмя());
//	ОтветСтруктура.Вставить("Ref", Строка(СсылкаНаОбъект.УникальныйИдентификатор()));
//	
//	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
//		ОтветСтруктура.Вставить("DeletionMark", СсылкаНаОбъект.ПометкаУдаления);
//		Попытка
//			ОтветСтруктура.Вставить("Code", СсылкаНаОбъект.Код);
//		Исключение
//		    ОтветСтруктура.Вставить("Code", "");
//		КонецПопытки;
//		Попытка
//			ОтветСтруктура.Вставить("Description", СсылкаНаОбъект.Наименование);
//		Исключение
//		    ОтветСтруктура.Вставить("Description", "");
//		КонецПопытки;
//	КонецЕсли;
//	
//	Возврат ОтветСтруктура;
//	
//КонецФункции

//Функция СоздатьУзелДокумента(СсылкаНаОбъект) Экспорт
//	
//	ОтветСтруктура = Новый Структура;
//	ОтветСтруктура.Вставить("type", СсылкаНаОбъект.Метаданные().ПолноеИмя());
//	ОтветСтруктура.Вставить("Ref", Строка(СсылкаНаОбъект.УникальныйИдентификатор()));
//	
//	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
//		ОтветСтруктура.Вставить("DeletionMark", СсылкаНаОбъект.ПометкаУдаления);
//		Попытка
//			ОтветСтруктура.Вставить("Code", СсылкаНаОбъект.Код);
//		Исключение
//		    ОтветСтруктура.Вставить("Code", "");
//		КонецПопытки;
//		Попытка
//			ОтветСтруктура.Вставить("Description", СсылкаНаОбъект.Наименование);
//		Исключение
//		    ОтветСтруктура.Вставить("Description", "");
//		КонецПопытки;
//	КонецЕсли;
//	
//	Возврат ОтветСтруктура;
//	
//КонецФункции

#КонецОбласти
