// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ПолучитьПеречисление(ВидПеречисления, Значение) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ксп_ВнешниеПеречисления.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ксп_ВнешниеПеречисления КАК ксп_ВнешниеПеречисления
		|ГДЕ
		|	ксп_ВнешниеПеречисления.ВидПеречисления = &ВидПеречисления
		|	И ксп_ВнешниеПеречисления.Наименование = &Значение";
	
	Запрос.УстановитьПараметр("ВидПеречисления", ВидПеречисления);
	Запрос.УстановитьПараметр("Значение", Значение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат Неопределено;
	
КонецФункции 



// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ДобавитьПеречисление(ВидПеречисления, Значение, Представление)  Экспорт
	
	Рез = ПолучитьПеречисление(ВидПеречисления, Значение);
	Если НЕ ЗначениеЗаполнено(Рез) Тогда
		
		НовОбъект = Справочники.ксп_ВнешниеПеречисления.СоздатьЭлемент();
		НовОбъект.ВидПеречисления = ВидПеречисления;
		НовОбъект.Наименование = Значение;
		НовОбъект.Представление=Представление;
		
		НовОбъект.Записать();
		Рез = НовОбъект.Ссылка;
		
	КонецЕсли;
	Возврат Рез;
	
КонецФункции
