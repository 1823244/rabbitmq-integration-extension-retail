
// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ПолучитьВидПеречисления(ВнешняяСистема, ИмяПеречисления) Экспорт
	
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ксп_ВнешниеПеречисления.Ссылка КАК Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ксп_ВнешниеПеречисления КАК ксп_ВнешниеПеречисления
		|ГДЕ
		|	ксп_ВнешниеПеречисления.ВнешняяСистема = &ВнешняяСистема
		|	И ксп_ВнешниеПеречисления.ИмяПеречисления = &ИмяПеречисления";
	
	Запрос.УстановитьПараметр("ВнешняяСистема", ВнешняяСистема);
	Запрос.УстановитьПараметр("ИмяПеречисления", ИмяПеречисления);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат Неопределено;
	
КонецФункции 



// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ДобавитьВидПеречисления(ВнешняяСистема, ИмяПеречисления)  Экспорт
	
	Рез = ПолучитьВидПеречисления(ВнешняяСистема, ИмяПеречисления);
	Если НЕ ЗначениеЗаполнено(Рез) Тогда
		
		НовОбъект = ПланыВидовХарактеристик.ксп_ВнешниеПеречисления.СоздатьЭлемент();
		НовОбъект.ВнешняяСистема = ВнешняяСистема;
		НовОбъект.ИмяПеречисления = ИмяПеречисления;
		НовОбъект.Наименование = "" + ВнешняяСистема + ", перечисление: " +ИмяПеречисления;
		
		НовОбъект.Записать();
		Рез = НовОбъект.Ссылка;
		
	КонецЕсли;
	Возврат Рез;
	
КонецФункции
